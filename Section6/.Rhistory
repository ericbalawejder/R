#points
p + geom_point()
#lines
p + geom_line()
#multiple layers
p + geom_point() + geom_line()
p + geom_line() + geom_point()
q <- ggplot(data=movies,
aes(x=CriticRating, y=AudianceRating, colour=Genre, size=BudgetInMillions))
#add geom layer
q + geom_point()
#overriding aes
q + geom_point(aes(size=Criticrating))
#overriding aes
q + geom_point(aes(size=CriticRating))
#ex2
q + geom_point(aes(colour=BudgetInMillions))
q + geom_point()
#ex3
q + geom_point(aes(x=BudgetInMillions))
#ex3
q + geom_point(aes(x=BudgetInMillions)) + xlab("Budget In Millions")
#ex4
p + geom_line() + geom_point()
#reduce line size
p + geom_line(size=1) + geom_point()
#ex3
q + geom_point(aes(x=BudgetInMillions)) + xlab("Budget In Millions")
# Mapping vs setting
r <- ggplot(data=movies,
aes(x=CriticRating, y=AudianceRating, colour=Genre, size=BudgetInMillions))
r + geom_point()
#2 setting
r + geom_point(aes(colour="DarkGreen"))
#2 setting
r + geom_point(colour="DarkGreen")
#ERROR
r + geom_point(aes(colour="DarkGreen"))
#1 Mapping
r + geom_point(aes(size=BudgetInMillions))
#2 Setting
r + geom_point(size=10)
#2 Setting
r + geom_point(size=5)
#2 Setting
r + geom_point(size=1)
#ERROR
r + geom_point(aes(size=1))
s <- ggplot(data=movies, aes(x=BudgetInMillions))
s + geom_histogram(binwidth=10)
#add color
s + geom_histogram(binwidth=10, fill="Green")
#add color
s + geom_histogram(binwidth=10, aes(fill="Green"))
#add color
s + geom_histogram(binwidth=10, aes(fill=Genre))
#add a border
s + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")
#sometimes you may need density charts
s + geom_density()
s + geom_density(aes(fill=Genre))
s + geom_density(aes(fill=Genre), position="stack")
t <- ggplot(data=movies, aes(x=AudienceRating))
t + geom_histogram(binwidth=10, fill="White", colour="Blue")
t <- ggplot(data=movies, aes(x=AudianceRating))
t + geom_histogram(binwidth=10, fill="White", colour="Blue")
#another way
t <- ggplot(data=movies)
t + geom_histogram(binwidth=10,
aes(x=AudianceRating), fill="White", colour="Blue")
t + geom_histogram(binwidth=1,
aes(x=AudianceRating), fill="White", colour="Blue")
t + geom_histogram(binwidth=10,
aes(x=AudianceRating), fill="White", colour="Blue")
t <- ggplot(data=movies, aes(x=AudianceRating))
t + geom_histogram(binwidth=10, fill="White", colour="Blue")
t <- ggplot(data=movies, aes(x=AudianceRating))
t + geom_histogram(binwidth=10, fill="White", colour="Blue")
t + geom_histogram(binwidth=1, fill="White", colour="Blue")
t + geom_histogram(binwidth=1, fill="White", colour="Blue")
t + geom_histogram(binwidth=10, fill="White", colour="Blue")
#another way
t <- ggplot(data=movies)
t + geom_histogram(binwidth=10,
aes(x=AudianceRating), fill="White", colour="Blue")
#>>> chart 4
t + geom_histogram(binwidth=10,
aes(x=CriticRating), fill="White", colour="Blue")
?geom_smooth
u <- ggplot(data=movies, aes(x=CriticRating), y=AudianceRating, colour=Genre)
u + geom_point() + geom_smooth()
u + geom_point() + geom_smooth()
u <- ggplot(data=movies, aes(x=CriticRating, y=AudianceRating), colour=Genre)
u + geom_point() + geom_smooth()
u + geom_point() + geom_smooth(fill=NA)
u <- ggplot(data=movies, aes(x=CriticRating, y=AudianceRating, colour=Genre))
u + geom_point() + geom_smooth()
u + geom_point() + geom_smooth(fill=NA)
#boxplots
u <- ggplot(data=movies, aes(x=Genre, y =AudianceRating, colour=Genre))
u + geom_boxplot()
u + geom_boxplot(size=1.2)
u + geom_boxplot(size=1)
u + geom_boxplot(size=0.5)
u + geom_boxplot(size=0.5) + geom_point()
#tip/hack:
u + geom_boxplot(size=0.5) + geom_jitter()
#tip/hack:
u + geom_boxplot() + geom_jitter()
#tip/hack:
u + geom_boxplot(size=0.25) + geom_jitter()
#tip/hack:
u + geom_boxplot(size=0.1) + geom_jitter()
#tip/hack:
u + geom_boxplot() + geom_jitter()
u + geom_jitter() + geom_boxplot()
u + geom_jitter() + geom_boxplot(alpha=0.5)
v <- ggplot(data=movies, aes(x=BudgetInMillions))
v + geom_histogram(binwidth=10, aes(fill=Genre))
v + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")
#facets
v + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black") +
facet_grid(Genre~.)
#facets
v + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black") +
facet_grid(Genre~., scales="free")
#scatterplots:
w <- ggplot(data=movies, aes(x=CriticRating, y=AudianceRating, colour=Genre))
w + geom_point()
w + geom_point() + facet_grid(Genre~.)
w + geom_point() + facet_grid(.~Year)
w + geom_point() + facet_grid(Genre~Year)
w + geom_point(size=0.1) + facet_grid(Genre~Year)
w + geom_point(size=0.1) + geom_smooth() + facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetInMillions)) + geom_smooth() + facet_grid(Genre~Year)
w + geom_point(size=0.1, aes(size=BudgetInMillions)) +
geom_smooth() + facet_grid(Genre~Year)
m <- ggplot(data=movies, aes(x=CriticRating, y=AudianceRating,
size=BudgetInMillions,
colour=Genre))
m + geom_point()
m + geom_point() + xlim(50, 100)
m + geom_point() + xlim(50, 100) + ylim(50, 100)
# Won't always work well
n <- ggplot(data=movies, aes(x=BudgetInMillions))
n + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")
n + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black") +
ylim(0, 50)
# Instead, zoom:
n + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black") +
coord_cartesian(ylim=c(0, 50))
# improve #1
w + ggplot(aes(size=BudgetInMillions)) +
geom_smooth() + facet_grid(Genre~Year) +
coord_cartesian(ylim=c(0, 100))
# Add size
ggplot(data=movies,
aes(x=CriticRating, y=AudianceRating, colour=Genre, size=BudgetInMillions)) +
geom_point()
# improve #1
w + ggplot(aes(size=BudgetInMillions)) +
geom_smooth() + facet_grid(Genre~Year) +
coord_cartesian(ylim=c(0, 100))
ggplot(data=movies, aes(x=CriticRating, y=AudianceRating))
# Add geometry
ggplot(data=movies, aes(x=CriticRating, y=AudianceRating)) + geom_point()
# Add color
ggplot(data=movies, aes(x=CriticRating, y=AudianceRating, colour=Genre)) + geom_point()
# Add size
ggplot(data=movies,
aes(x=CriticRating, y=AudianceRating, colour=Genre, size=BudgetInMillions)) +
geom_point()
#scatterplots:
w <- ggplot(data=movies, aes(x=CriticRating, y=AudianceRating, colour=Genre))
w + geom_point()
# improve #1
w + ggplot(aes(size=BudgetInMillions)) +
geom_smooth() + facet_grid(Genre~Year) +
coord_cartesian(ylim=c(0, 100))
#scatterplots:
w <- ggplot(data=movies, aes(x=CriticRating, y=AudianceRating, colour=Genre))
w + geom_point()
#facets
w + geom_point() + facet_grid(Genre~.)
w + geom_point() + facet_grid(.~Year)
w + geom_point(size=0.1) + facet_grid(Genre~Year)
w + geom_point(size=0.1) + geom_smooth() + facet_grid(Genre~Year)
w + geom_point(size=0.1, aes(size=BudgetInMillions)) +
geom_smooth() + facet_grid(Genre~Year)
# improve #1
w + ggplot(aes(size=BudgetInMillions)) +
geom_smooth() + facet_grid(Genre~Year) +
coord_cartesian(ylim=c(0, 100))
#scatterplots:
w <- ggplot(data=movies, aes(x=CriticRating, y=AudianceRating, colour=Genre))
w + geom_point()
#facets
w + geom_point() + facet_grid(Genre~.)
w + geom_point() + facet_grid(.~Year)
w + geom_point(size=0.1) + facet_grid(Genre~Year)
w + geom_point(size=0.1) + geom_smooth() + facet_grid(Genre~Year)
w + geom_point(size=0.1, aes(size=BudgetInMillions)) +
geom_smooth() + facet_grid(Genre~Year)
# improve #1
w + ggplot(aes(size=BudgetInMillions)) +
geom_smooth() + facet_grid(Genre~Year) +
coord_cartesian(ylim=c(0, 100))
# improve #1
w + geom_point(aes(size=BudgetInMillions)) +
geom_smooth() + facet_grid(Genre~Year) +
coord_cartesian(ylim=c(0, 100))
# Theme
o <- ggplot(data=movies, aes(x=BudgetInMillions))
o + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")
# axes label
h <- o + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")
h
h + xlab("Money axis") + ylab("Number of Movies")
h + xlab("Money axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=30),
axis.title.y = element_text(colour="Red", size=30))
h + xlab("Money axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=5),
axis.title.y = element_text(colour="Red", size=5))
h + xlab("Money axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10))
h + xlab("Money axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20))
h + xlab("Money axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10))
?theme
# lengend formatting:
h + xlab("Money axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1, 1),
legend.justification = c(1, 1))
# lengend formatting:
h + xlab("Money axis") + ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=10),
legend.text = element_text(size=10),
legend.position = c(1, 1),
legend.justification = c(1, 1))
# lengend formatting:
h + xlab("Money axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=10),
legend.text = element_text(size=10),
legend.position = c(1, 1),
legend.justification = c(1, 1))
family="Couier")
# lengend formatting:
h + xlab("Money axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=10),
legend.text = element_text(size=10),
legend.position = c(1, 1),
legend.justification = c(1, 1),
plot.title = element.text(colour="DarkBlue",
size=40,
family="Couier"))
# lengend formatting:
h + xlab("Money axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=10),
legend.text = element_text(size=10),
legend.position = c(1, 1),
legend.justification = c(1, 1),
plot.title = element_text(colour="DarkBlue",
size=40,
family="Couier"))
# lengend formatting:
h + xlab("Money axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=10),
legend.text = element_text(size=10),
legend.position = c(1, 1),
legend.justification = c(1, 1),
plot.title = element_text(colour="DarkBlue",
size=10,
family="Couier"))
# lengend formatting:
h + xlab("Money axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=10),
legend.text = element_text(size=10),
legend.position = c(1, 1),
legend.justification = c(1, 1),
plot.title = element_text(colour="DarkBlue",
size=10,
family="Couier"))
# lengend formatting:
h + xlab("Money axis") + ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=10),
axis.title.y = element_text(colour="Red", size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=10),
legend.text = element_text(size=10),
legend.position = c(1, 1),
legend.justification = c(1, 1),
plot.title = element_text(colour="DarkBlue",
size=10,
family="Courier"))
s <- ggplot(data=movies, aes(x=BudgetInMillions))
s + geom_histogram(binwidth=10)
Section6.Homework.Data <- read.csv("~/Development/R/RPA-Z/Section6/Section6-Homework-Data.csv")
View(Section6.Homework.Data)
#Import the Data
getwd()
setwd("/Users/ericbalawejder/Development/R/RPA-Z/Section6")
movies <- read.csv("Section6-Homework-Data.csv")
#Data Exploration
head(movies) #top rows
summary(movies) #column summaries
str(movies) #structure of the dataset
#Activate GGPlot2
#install.packages("ggplot2")
library(ggplot2)
#{Offtopic} This Is A Cool Insight:
ggplot(data=mov, aes(x=Day.of.Week)) + geom_bar()
#{Offtopic} This Is A Cool Insight:
ggplot(data=movies, aes(x=Day.of.Week)) + geom_bar()
summary(movies) #column summaries
str(movies) #structure of the dataset
#Now we need to filter our dataset to leave onlly the
#Genres and Studios that we are interested in
#We will start with the Genre filter and use the Logical 'OR'
#operator to select multiple Genres:
filter <- (movies$Genre == "action") | (movies$Genre == "adventure") |
(movies$Genre == "animation") | (movies$Genre == "comedy") | (movies$Genre == "drama")
#Now let's do the same for the Studio filter:
filter2 <- (movies$Studio == "Buena Vista Studios") | (movies$Studio == "WB") |
(movies$Studio == "Fox") | (movies$Studio == "Universal") |
(movies$Studio "Sony") | (movies$Studio == "Paramount Pictures")
#Now let's do the same for the Studio filter:
filter2 <- (movies$Studio == "Buena Vista Studios") | (movies$Studio == "WB") |
(movies$Studio == "Fox") | (movies$Studio == "Universal") |
(movies$Studio == "Sony") | (movies$Studio == "Paramount Pictures")
# Alternative statement
filter2 <- movies$Studio %in% c("Buena Vista Studios", "WB", "Fox", "Universal",
"Sony", "Paramount Pictures")
#Now let's do the same for the Studio filter:
filter2 <- (movies$Studio == "Buena Vista Studios") | (movies$Studio == "WB") |
(movies$Studio == "Fox") | (movies$Studio == "Universal") |
(movies$Studio == "Sony") | (movies$Studio == "Paramount Pictures")
#Apply the row filters to the dataframe
movies2 <- movies[filter & filter2,]
movies2
#Prepare the plot's data and aes layers
#Note we did not rename the columns.
#Use str() or summary() to fin out the correct column names
p <- ggplot(data=movies2, aes(x=Genre, y=Gross...US))
p #Nothing happens. We need a geom.
#Add a Point Geom Layer
p +
geom_point()
#Add a boxplot instead of the points
p + geom_boxplot() + geom_jitter()
p + geom_jitter() + geom_boxplot()
p + geom_jitter() + geom_boxplot(alpha=0.7)
p + geom_jitter(aes(size=Budget...mil., colour=Studio)) + geom_boxplot(alpha=0.7)
p + geom_jitter(aes(size=Budget...mill., colour=Studio)) + geom_boxplot(alpha=0.7)
p + geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.7, outlier.color = NA)
#Add points
p + geom_boxplot() + geom_jitter()
#Replace points with jitter
p + geom_boxplot() + geom_jitter()
#Add a boxplot instead of the points
p + geom_boxplot() + geom_jitter()
#Add a Point Geom Layer
p + geom_point()
#Add a boxplot instead of the points
p + geom_boxplot()
#Add points
p + geom_boxplot() + geom_jitter()
#Add a Point Geom Layer
p + geom_point()
#Add a boxplot instead of the points
p + geom_boxplot()
#Add points
p + geom_boxplot() + geom_jitter()
#Add points
#Not what we are after
#Replace points with jitter
p +
geom_boxplot() +
geom_jitter()
#Add points
#Replace points with jitter
p + geom_jitter() + geom_boxplot()
#Place boxplot on top of jitter
p + geom_boxplot() + geom_jitter()
#Add boxplot transparency
p + geom_jitter() + geom_boxplot(alpha=0.7)
#Good. Now add size and colour to the points:
p + geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.7)
#Let's remove them:
p + geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.7, outlier.color = NA)
#Let's "Save" our progress by placing it into a new object:
q <- p + geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.7, outlier.color = NA)
q
#Non-data ink
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
ggtitle("Domestic Gross % by Genre") #plot title
q
#Theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
legend.text = element_text(size=12)
)
q
#Theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=10),
#Legend title:
legend.title = element_text(size=10),
#Legend text
legend.text = element_text(size=5)
)
q
#Theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=10),
axis.title.y = element_text(colour="Blue", size=10),
#Axes texts:
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
#Plot title:
plot.title = element_text(colour="Black",
size=10),
#Legend title:
legend.title = element_text(size=10),
#Legend text
legend.text = element_text(size=5)
)
q
#Final touch. We haven't discussed this in the course,
#However this is how you can change individual legend titles:
q$labels$size = "Budget $M"
q
